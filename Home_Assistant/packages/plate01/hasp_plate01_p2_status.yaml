##############################################################################
# Automations to display status information like clock, calendar, and weather
# on page 2

input_select:
  hasp_plate01_p2_weather_provider:
    name: plate01 Weather Provider
    options:
      - No weather integrations defined
  hasp_plate01_p2_clock_format:
    name: plate01 Clock Format
    options:
      - 12 hour
      - 24 hour
  hasp_plate01_p2_calendar_format:
    name: plate01 Calendar Format
    options:
      - Month + Date
      - Day of week
  hasp_plate01_p2_temperature_humidity:
    name: plate01 Temperature and Humidity
    options:
      - Current Temperature
      - Current Humidity

input_text:
  hasp_plate01_p2_weather_provider:

sensor:
  - platform: template
    sensors:
      hasp_plate01_p2_weather_provider_condition:
        value_template: '{%set provider=states("input_text.hasp_plate01_p2_weather_provider")%}{{states(provider)|replace("windy-variant","windy")|replace("partlycloudy","partly cloudy")|title}}'
      hasp_plate01_p2_weather_provider_temperature:
        value_template: '{%set provider=states("input_text.hasp_plate01_p2_weather_provider")%}{{state_attr(provider,"temperature")|int}}'
        unit_of_measurement: 'degrees'
      hasp_plate01_p2_weather_provider_humidity:
        value_template: '{%set provider=states("input_text.hasp_plate01_p2_weather_provider")%}{{state_attr(provider,"humidity")|int}}'
        unit_of_measurement: '%'

automation:
  # Toggle 12/24 hour on p[2].b[4]
  - alias: hasp_plate01_p2_b4_clock_format_toggle
    trigger:
      - platform: mqtt
        topic: "hasp/plate01/state/p[2].b[4]"
        payload: "ON"
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.hasp_plate01_p2_clock_format
          option: '{%if "24" in states("input_select.hasp_plate01_p2_clock_format")%}12 hour{% else %}24 hour{% endif %}'

  # Toggle calendar format on p[2].b[5]
  - alias: hasp_plate01_p2_b4_calendar_format_toggle
    trigger:
      - platform: mqtt
        topic: "hasp/plate01/state/p[2].b[5]"
        payload: "ON"
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.hasp_plate01_p2_calendar_format
          option: '{%if "Month" in states("input_select.hasp_plate01_p2_calendar_format")%}Day of week{% else %}Month + Date{% endif %}'

  # Toggle temperature or humidity on p[2].b[6]
  - alias: hasp_plate01_p2_b4_temperature_humidity_toggle
    trigger:
      - platform: mqtt
        topic: "hasp/plate01/state/p[2].b[6]"
        payload: "ON"
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.hasp_plate01_p2_temperature_humidity
          option: '{%if "Temperature" in states("input_select.hasp_plate01_p2_temperature_humidity")%}Current Humidity{% else %}Current Temperature{% endif %}'


  # Set appropriate font for the time and date and send intial values on HASP init
  - alias: hasp_plate01_p2_ClockInit
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
        to: "on"
      - platform: homeassistant
        event: start
    condition:
      - condition: state
        entity_id: "binary_sensor.plate01_connected"
        state: "on"
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: '["p[2].b[4].font=10","p[2].b[4].xcen=2","p[2].b[5].xcen=2"]'
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/p[2].b[4].txt"
          payload_template: '{%if "24" in states("input_select.hasp_plate01_p2_clock_format")%}{%set format="%-H"%}{% else %}{%set format="%I"%}{% endif %}"{{(now().strftime(format)|int)~now().strftime(":%M")}} "'
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/p[2].b[5].font"
          payload_template: '{%if "Month" in states("input_select.hasp_plate01_p2_calendar_format")%}8{% else %}7{% endif %}'
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/p[2].b[5].txt"
          payload_template: '"{%if "Month" in states("input_select.hasp_plate01_p2_calendar_format")%}{{(now().strftime("%b "))~now().day}}{% else %}{{(now().strftime("%A "))}}{% endif %} "'

  - alias: hasp_plate01_p2_WeatherInit
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
      - platform: homeassistant
        event: start
    condition:
      - condition: state
        entity_id: "binary_sensor.plate01_connected"
        state: "on"
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: '["p[2].b[6].font=10","p[2].b[6].xcen=2","p[2].b[7].xcen=2"]'
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/p[2].b[6].txt"
          payload_template: '"{%if "Temperature" in states("input_select.hasp_plate01_p2_temperature_humidity")%}{{states("sensor.hasp_plate01_p2_weather_provider_temperature")}}°{% else %}{{states("sensor.hasp_plate01_p2_weather_provider_humidity")}}%{% endif %}"'
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/p[2].b[7].font"
          payload_template: '{%set weatherlength=states("sensor.hasp_plate01_p2_weather_provider_condition")|length %}{% if weatherlength < 7 -%}8{% elif weatherlength < 10 %}7{% else %}6{%- endif %}'
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/p[2].b[7].txt"
          payload_template: '"{{states("sensor.hasp_plate01_p2_weather_provider_condition")}} "'

  # Send the current time every minute
  - alias: hasp_plate01_p2_ClockUpdate
    trigger:
      - platform: time_pattern
        # Matches every minute
        seconds: 0
      - platform: state
        entity_id: input_select.hasp_plate01_p2_clock_format
    condition:
      - condition: state
        entity_id: "binary_sensor.plate01_connected"
        state: "on"
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/p[2].b[4].txt"
          payload_template: '{%if "24" in states("input_select.hasp_plate01_p2_clock_format")%}{%set format="%-H"%}{% else %}{%set format="%I"%}{% endif %}"{{(now().strftime(format)|int)~now().strftime(":%M")}} "'

  # Send "Day, Month Date" every day at midnight
  - alias: hasp_plate01_p2_CalendarUpdate
    trigger:
      - platform: time
        at: "00:00:00"
      - platform: state
        entity_id: input_select.hasp_plate01_p2_calendar_format
    condition:
      - condition: state
        entity_id: "binary_sensor.plate01_connected"
        state: "on"
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/p[2].b[5].font"
          payload_template: '{%if "Month" in states("input_select.hasp_plate01_p2_calendar_format")%}8{% else %}7{% endif %}'
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/p[2].b[5].txt"
          payload_template: '"{%if "Month" in states("input_select.hasp_plate01_p2_calendar_format")%}{{(now().strftime("%b "))~now().day}}{% else %}{{(now().strftime("%A "))}}{% endif %} "'

  - alias: hasp_plate01_p2_TemperatureHumidityUpdate
    trigger:
      - platform: state
        entity_id: sensor.hasp_plate01_p2_weather_provider_temperature
      - platform: state
        entity_id: sensor.hasp_plate01_p2_weather_provider_humidity
      - platform: state
        entity_id: input_select.hasp_plate01_p2_temperature_humidity
    condition:
      - condition: state
        entity_id: "binary_sensor.plate01_connected"
        state: "on"
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/p[2].b[6].txt"
          payload_template: '"{%if "Temperature" in states("input_select.hasp_plate01_p2_temperature_humidity")%}{{states("sensor.hasp_plate01_p2_weather_provider_temperature")}}°{% else %}{{states("sensor.hasp_plate01_p2_weather_provider_humidity")}}%{% endif %}"'

  # Display weather conditions on page 2 when weather updates
  # Conditions are manually handled based on the list here:
  # https://www.home-assistant.io/integrations/weather/#condition-mapping
  - alias: hasp_plate01_p2_WeatherUpdate
    trigger:
      - platform: state
        entity_id: sensor.hasp_plate01_p2_weather_provider_condition
    condition:
      - condition: state
        entity_id: "binary_sensor.plate01_connected"
        state: "on"
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/p[2].b[7].font"
          payload_template: '{%set weatherlength=states("sensor.hasp_plate01_p2_weather_provider_condition")|length %}{% if weatherlength < 7 -%}8{% elif weatherlength < 10 %}7{% else %}6{%- endif %}'
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/p[2].b[7].txt"
          payload_template: '"{{states("sensor.hasp_plate01_p2_weather_provider_condition")}} "'

  # Our template weather sensors won't ever update unless forced to do so, so force them to do so any time an event happens from a "weather." entity
  - alias: hasp_plate01_p2_WeatherSensorUpdate
    trigger:
      - platform: event
        event_type: state_changed
    condition:
      - condition: template
        value_template: >
          {{ trigger.event.data.entity_id.startswith('weather.') }}
      - condition: state
        entity_id: "binary_sensor.plate01_connected"
        state: "on"
    action:
      - service: homeassistant.update_entity
        entity_id: sensor.hasp_plate01_p2_weather_provider_condition
      - service: homeassistant.update_entity
        entity_id: sensor.hasp_plate01_p2_weather_provider_temperature
      - service: homeassistant.update_entity
        entity_id: sensor.hasp_plate01_p2_weather_provider_humidity

  # populate available weather providers
  - alias: hasp_plate01_p2_provider_populate
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: homeassistant.turn_off
        entity_id: automation.hasp_plate01_p2_provider_save
      - service: input_select.set_options
        data_template:
          entity_id: input_select.hasp_plate01_p2_weather_provider
          options: >-
            {{ states.weather | map(attribute='entity_id') | list }}
      - service: input_select.select_option
        data_template:
          entity_id: input_select.hasp_plate01_p2_weather_provider
          option: "{{ states('input_text.hasp_plate01_p2_weather_provider') }}"
      - service: homeassistant.turn_on
        entity_id: automation.hasp_plate01_p2_provider_save
      - service: homeassistant.update_entity
        entity_id: sensor.hasp_plate01_p2_weather_provider_condition
      - service: homeassistant.update_entity
        entity_id: sensor.hasp_plate01_p2_weather_provider_temperature
      - service: homeassistant.update_entity
        entity_id: sensor.hasp_plate01_p2_weather_provider_humidity

  # save selected weather provider
  - alias: hasp_plate01_p2_provider_save
    trigger:
      - platform: state
        entity_id: input_select.hasp_plate01_p2_weather_provider
    action:
      - service: input_text.set_value
        data_template:
          entity_id: input_text.hasp_plate01_p2_weather_provider
          value: "{{ states('input_select.hasp_plate01_p2_weather_provider') }}"
      - service: homeassistant.update_entity
        entity_id: sensor.hasp_plate01_p2_weather_provider_condition
      - service: homeassistant.update_entity
        entity_id: sensor.hasp_plate01_p2_weather_provider_temperature
      - service: homeassistant.update_entity
        entity_id: sensor.hasp_plate01_p2_weather_provider_humidity


  ##############################################################################
  # Automations to set colors on HASP Page 2
  #
  # Here we've swapped selected/unselected as these buttons will always be
  # unselected (unless actively being pressed).

  - alias: hasp_plate01_p2_ColorConfig_selectedforegroundcolor
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_number.hasp_plate01_selectedforegroundcolor
    condition:
      - condition: state
        entity_id: "binary_sensor.plate01_connected"
        state: "on"
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: >-
            [{%- for i in range(4,8) -%}"p[2].b[{{i}}].pco={{ states('input_number.hasp_plate01_selectedforegroundcolor')|int }}"{% if not loop.last %},{% endif %}{%- endfor -%}]

  - alias: hasp_plate01_p2_ColorConfig_selectedbackgroundcolor
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_number.hasp_plate01_selectedbackgroundcolor
    condition:
      - condition: state
        entity_id: "binary_sensor.plate01_connected"
        state: "on"
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: >-
            [{%- for i in range(4,8) -%}"p[2].b[{{i}}].bco={{ states('input_number.hasp_plate01_selectedbackgroundcolor')|int }}"{% if not loop.last %},{% endif %}{%- endfor -%}]

  - alias: hasp_plate01_p2_ColorConfig_unselectedforegroundcolor
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_number.hasp_plate01_unselectedforegroundcolor
    condition:
      - condition: state
        entity_id: "binary_sensor.plate01_connected"
        state: "on"
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: >-
            [{%- for i in range(4,8) -%}"p[2].b[{{i}}].pco2={{ states('input_number.hasp_plate01_unselectedforegroundcolor')|int }}"{% if not loop.last %},{% endif %}{%- endfor -%}]

  - alias: hasp_plate01_p2_ColorConfig_unselectedbackgroundcolor
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_number.hasp_plate01_unselectedbackgroundcolor
    condition:
      - condition: state
        entity_id: "binary_sensor.plate01_connected"
        state: "on"
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: >-
            [{%- for i in range(4,8) -%}"p[2].b[{{i}}].bco2={{ states('input_number.hasp_plate01_unselectedbackgroundcolor')|int }}"{% if not loop.last %},{% endif %}{%- endfor -%}]

  ##############################################################################
  # Automations to overlay icons on HASP Page 2
  #
  # This is a really goofy approach to doing things.  Page 2 provides 4 buttons
  # which can display text.  A single text field can have a single font size
  # and left/right/center justification.  On this page, I want text of various
  # sizes right aligned, with icons of the same size left-aligned.  There isn't
  # any way to make both of those things work in a single text field in Nextion.
  #
  # So... what we do here is call the Nextion command `xstr` to place text
  # arbitrarily on the screen.  With this command we can use the FontAwesome
  # code points of the included fonts to put icons anywhere we want!
  #
  # However, this approach has a lot of problems which we then need to handle:
  # * Icons placed w/ `xstr` only apply to the current page, so only attempt
  #   this while Page 2 is active.
  # * Any button interaction (press, release, new text, new color, etc)
  #   overwrites the icon, so we need to catch these events and put the icon
  #   back on top.
  # * The events we capture take time for the Nextion to process, so insert a
  #   1 msec delay command which will allow the Nextion to fully process the
  #   prior event.

  # Overlay a clock icon on the left side of p[2].b[4]
  - alias: hasp_plate01_p2_IconOverlayClock
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: mqtt
        topic: "hasp/plate01/command/page"
        payload: "2"
      - platform: mqtt
        topic: "hasp/plate01/state/p[2].b[4]"
      - platform: mqtt
        topic: "hasp/plate01/command/p[2].b[4].txt"
      - platform: state
        entity_id: input_number.hasp_plate01_selectedbackgroundcolor
      - platform: state
        entity_id: input_number.hasp_plate01_unselectedbackgroundcolor
      - platform: state
        entity_id: input_number.hasp_plate01_selectedforegroundcolor
      - platform: state
        entity_id: input_number.hasp_plate01_unselectedforegroundcolor
    condition:
      - condition: state
        entity_id: "binary_sensor.plate01_connected"
        state: "on"
      - condition: template
        value_template: "{{ (states('input_number.hasp_plate01_activepage')|int) == 2 }}"
    action:
      - delay:
          seconds: 0.2
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: '["delay=1","xstr 0,2,50,65,8,{{ states("input_number.hasp_plate01_selectedforegroundcolor")|int }},0,1,1,3,\"\""]'

  # Overlay a calendar icon on the left side of p[2].b[5]
  - alias: hasp_plate01_p2_IconOverlayCalendar
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: mqtt
        topic: "hasp/plate01/command/page"
        payload: "2"
      - platform: mqtt
        topic: "hasp/plate01/state/p[2].b[5]"
      - platform: mqtt
        topic: "hasp/plate01/command/p[2].b[5].txt"
      - platform: state
        entity_id: input_number.hasp_plate01_selectedbackgroundcolor
      - platform: state
        entity_id: input_number.hasp_plate01_unselectedbackgroundcolor
      - platform: state
        entity_id: input_number.hasp_plate01_selectedforegroundcolor
      - platform: state
        entity_id: input_number.hasp_plate01_unselectedforegroundcolor
    condition:
      - condition: state
        entity_id: "binary_sensor.plate01_connected"
        state: "on"
      - condition: template
        value_template: "{{ (states('input_number.hasp_plate01_activepage')|int) == 2 }}"
    action:
      - delay:
          seconds: 0.2
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: '["delay=1","xstr 0,69,50,65,8,{{ states("input_number.hasp_plate01_selectedforegroundcolor")|int }},0,1,1,3,\"\""]'

  # Overlay a thermometer icon on the left side of p[2].b[6] based on the following:
  # <= 0 thermometer-empty
  # < 32 thermometer-quarter
  # < 65 thermometer-half
  # < 90 thermometer-three-quarters
  # > 90 thermometer-full
  - alias: hasp_plate01_p2_IconOverlayThermometer
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: mqtt
        topic: "hasp/plate01/command/page"
        payload: "2"
      - platform: mqtt
        topic: "hasp/plate01/state/p[2].b[6]"
      - platform: mqtt
        topic: "hasp/plate01/command/p[2].b[6].txt"
      - platform: state
        entity_id: input_number.hasp_plate01_selectedbackgroundcolor
      - platform: state
        entity_id: input_number.hasp_plate01_unselectedbackgroundcolor
      - platform: state
        entity_id: input_number.hasp_plate01_selectedforegroundcolor
      - platform: state
        entity_id: input_number.hasp_plate01_unselectedforegroundcolor
    condition:
      - condition: state
        entity_id: "binary_sensor.plate01_connected"
        state: "on"
      - condition: template
        value_template: "{{ (states('input_number.hasp_plate01_activepage')|int) == 2 }}"
    action:
      - delay:
          seconds: 0.2
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: '{%set temp=states("sensor.hasp_plate01_p2_weather_provider_temperature")|int%}["delay=1","xstr 5,136,40,65,8,{{ states("input_number.hasp_plate01_selectedforegroundcolor")|int }},0,1,1,3,\"{%if "Humidity" in states("input_select.hasp_plate01_p2_temperature_humidity")%}{% elif temp <= 0 -%}{% elif temp < 32 %}{% elif temp < 65 %}{% elif temp < 90 %}{% else %}{%- endif %}\""]'

  # Weather icons!  Check the current weather state against this list:  https://www.home-assistant.io/integrations/weather/#condition-mapping
  # and then map a FontAwesome icon for each of the possible conditions.
  - alias: hasp_plate01_p2_IconOverlayWeather
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: mqtt
        topic: "hasp/plate01/command/page"
        payload: "2"
      - platform: mqtt
        topic: "hasp/plate01/state/p[2].b[7]"
      - platform: mqtt
        topic: "hasp/plate01/command/p[2].b[7].txt"
      - platform: state
        entity_id: input_number.hasp_plate01_selectedbackgroundcolor
      - platform: state
        entity_id: input_number.hasp_plate01_unselectedbackgroundcolor
      - platform: state
        entity_id: input_number.hasp_plate01_selectedforegroundcolor
      - platform: state
        entity_id: input_number.hasp_plate01_unselectedforegroundcolor
    condition:
      - condition: state
        entity_id: "binary_sensor.plate01_connected"
        state: "on"
      - condition: template
        value_template: "{{ (states('input_number.hasp_plate01_activepage')|int) == 2 }}"
    action:
      - delay:
          seconds: 0.2
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: '{%set provider=states("input_text.hasp_plate01_p2_weather_provider")%}{%set condition=states(provider)%}["delay=1","xstr 0,203,65,65,8,{{ states("input_number.hasp_plate01_selectedforegroundcolor")|int }},0,1,1,3,\"{% if condition == "clear-night" -%}{% elif condition == "cloudy" %}{% elif condition == "fog" %}{% elif condition == "hail" %}{% elif condition == "lightning" %}{% elif condition == "lightning-rainy" %}{% elif condition == "partlycloudy" %}{% elif condition == "pouring" %}{% elif condition == "rainy" %}{% elif condition == "snowy" %}{% elif condition == "snowy-rainy" %}{% elif condition == "sunny" %}{% elif condition == "windy" %}{% elif condition == "windy-variant" %}{% elif condition == "exceptional" %}{% else %}{%- endif %}\""]'
