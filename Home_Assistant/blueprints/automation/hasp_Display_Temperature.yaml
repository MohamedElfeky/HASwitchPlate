blueprint:
  name: "plate01 p[x].b[y] displays the current temperature"
  description: "A HASP button displays the current temperature"
  source_url: "https://github.com/aderusha/HASwitchPlate/blob/dev/Home_Assistant/blueprints/automation/hasp_Display_Temperature.yaml"
  domain: automation
  input:
    haspconnected:
      name: "HASP Device"
      description: "Select the HASP device"
      selector:
        entity:
          integration: mqtt
          domain: binary_sensor
          device_class: connectivity
    hasppage:
      name: "HASP Page"
      description: "Select the HASP page (1-11) for the temperature"
      selector:
        number:
          min: 1
          max: 11
          mode: box
    haspbutton:
      name: "HASP Button"
      description: "Select the HASP button (4-15) for the temperature.  Refer to the object map in the HASP documentation."
      selector:
        number:
          min: 4
          max: 15
          mode: box
    weather_provider:
      name: "Weather provider"
      description: "Select the weather provider to obtain the temperature"
      selector:
        entity:
          domain: weather
    suffix:
      name: "Temperature display suffix"
      description: 'Suffix for temperature display - 0:"째" 1:"째F" 2:"째C"'
      selector:
        number:
          min: 0
          max: 2
          mode: box
    font:
      name: Clock Font
      description: "Select the font for the temperature:"
      selector:
        number:
          min: 0
          max: 10
          mode: box
    xcen:
      name: Text horizontal alignment
      description: "Horizontal text alignment 0:Left 1:Center 2:Right"
      selector:
        number:
          min: 0
          max: 2
          mode: box
    ycen:
      name: Text vertical alignment
      description: "Vertical text alignment 0:Top 1:Center 2:Bottom"
      selector:
        number:
          min: 0
          max: 2
          mode: box

mode: single
max_exceeded: silent

variables:
  haspconnected: !input haspconnected
  haspname: '{{ haspconnected.split(".")[1].split("_connected")[0] }}'
  hasppage: !input hasppage
  haspbutton: !input haspbutton
  weather_provider: !input weather_provider
  suffix: !input suffix
  font: !input font
  xcen: !input xcen
  ycen: !input ycen
  jsontopic: '{{ "hasp/" ~ haspname ~ "/state/json" }}'
  jsoncommandtopic: '{{ "hasp/" ~ haspname ~ "/command/json" }}'
  haspobject: '{{ "p[" ~ hasppage ~ "].b[" ~ haspbutton ~ "]" }}'
  temperature: '{{state_attr(weather_provider, "temperature")}}'
  suffixstring: '째{% if suffix == "1" %}F{% elif suffix == "2" %}C{% endif %}'
  textstring: "{{temperature}}{{suffixstring}}"

trigger:
  - platform: state
    entity_id: !input haspconnected
    to: "on"
  - platform: homeassistant
    event: start
  - platform: state
    entity_id: !input weather_provider

condition:
  - condition: state
    entity_id: !input haspconnected
    state: "on"

action:
  - choose:
      # Update temperature if our weather provider changed state
      - conditions:
          - condition: template
            value_template: '{{ (trigger.platform == "state") and (trigger.entity_id == weather_provider) }}'
        sequence:
          - service: mqtt.publish
            data_template:
              topic: "{{commandtopic}}.txt"
              payload: '"{{textstring}}"'
    # Otherwise, apply the font+temp to the button
    default:
      - service: mqtt.publish
        data_template:
          topic: "{{jsoncommandtopic}}"
          payload: '["{{haspobject}}.font={{font}}","{{haspobject}}.xcen={{xcen}}","{{haspobject}}.ycen={{ycen}}","{{haspobject}}.txt=\"{{textstring}}\""]'
