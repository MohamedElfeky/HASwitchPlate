blueprint:
  name: "plate01 p[x].b[y] displays a clock"
  description: "A HASP button displays a clock"
  source_url: "https://github.com/aderusha/HASwitchPlate/blob/dev/Home_Assistant/blueprints/automation/hasp_Display_Clock.yaml"
  domain: automation
  input:
    haspconnected:
      name: HASP Device
      description: "Select the HASP device"
      selector:
        entity:
          integration: mqtt
          domain: binary_sensor
          device_class: connectivity
    hasppage:
      name: HASP Page
      description: "Select the HASP page (1-11) for the clock"
      selector:
        number:
          min: 1
          max: 11
          mode: box
    haspbutton:
      name: HASP Button
      description: "Select the HASP button (4-15) for the clock.  Not all pages will have all buttons, refer to the object map in the HASP documentation."
      selector:
        number:
          min: 4
          max: 15
          mode: box
    font:
      name: Clock Font
      description: "Select the font for the clock:"
      selector:
        number:
          min: 0
          max: 10
          mode: box
    xcen:
      name: Text horizontal alignment
      description: "Horizontal text alignment 0:Left 1:Center 2:Right"
      selector:
        number:
          min: 0
          max: 2
          mode: box
    ycen:
      name: Text vertical alignment
      description: "Vertical text alignment 0:Top 1:Center 2:Bottom"
      selector:
        number:
          min: 0
          max: 2
          mode: box
    hour24:
      name: 24 hour clock display
      selector:
        boolean:
    ampm:
      name: AM/PM suffix
      selector:
        boolean:

mode: single
max_exceeded: silent

variables:
  haspconnected: !input haspconnected
  haspname: '{{ haspconnected.split(".")[1].split("_connected")[0] }}'
  hasppage: !input hasppage
  haspbutton: !input haspbutton
  font: !input font
  xcen: !input xcen
  ycen: !input ycen
  hour24: !input hour24
  ampm: !input ampm
  haspobject: '{{ "p[" ~ hasppage ~ "].b[" ~ haspbutton ~ "]" }}'
  commandtopic: '{{ "hasp/" ~ haspname ~ "/command/" ~ haspobject }}'
  jsoncommandtopic: '{{ "hasp/" ~ haspname ~ "/command/json" }}'
  textstring: '{%- if hour24 == true -%}{%- set hourformat="%-H" -%}{%- else %}{%- set hourformat="%I" -%}{%- endif -%}{{(now().strftime(hourformat)|int)~now().strftime(":%M")}} {% if ampm == true %}{{now().strftime("%p")|lower}}{% endif %}'
  textfont: "10"

trigger:
  - platform: state
    entity_id: !input haspconnected
    to: "on"
  - platform: homeassistant
    event: start
  - platform: time_pattern
    seconds: 0

condition:
  - condition: state
    entity_id: !input haspconnected
    state: "on"

action:
  - choose:
      # Every minute, update the clock text
      - conditions:
          - condition: template
            value_template: '{{ trigger.platform == "time_pattern" }}'
        sequence:
          - service: mqtt.publish
            data_template:
              topic: "{{commandtopic}}.txt"
              payload: '"{{textstring}}"'
    # Otherwise, apply the font+clock to the button
    default:
      - service: mqtt.publish
        data_template:
          topic: "{{jsoncommandtopic}}"
          payload: '["{{haspobject}}.font={{font}}","{{haspobject}}.xcen={{xcen}}","{{haspobject}}.ycen={{ycen}}","{{haspobject}}.txt=\"{{textstring}}\""]'
